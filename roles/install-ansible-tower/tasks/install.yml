---
- name: install epel repo
  yum: name=epel-release state=present

- name: install dependencies
  yum: name={{ item }} state=present
  with_items:
   - wget
   - python-pip
   - libffi-devel
   - gcc
   - python-devel
   - openssl-devel
   - git

- name: install python pexpect
  command: pip install pexpect

- name: install ansible dependencies, if necessary
  command: pip install {{ item }}
  with_items:
   - paramiko
   - PyYAML
   - Jinja2
   - httplib2
   - six
  when: ({{ use_ansible_source }} == true)

- name: clone ansible source, if requested
  git: repo=https://github.com/ansible/ansible.git dest=/root/ansible
  when: ({{ use_ansible_source }} == true)

- name: update github ansible submodules, if requested
  shell: >
    cd /root/ansible;
    git submodule update --init --recursive
  when: ({{ use_ansible_source }} == true)

- name: pre-install ansible from source, if requested
  shell: >
    cd /root/ansible;
    make install
  when: ({{ use_ansible_source }} == true)

- name: check if ansible tower is already installed and running
  shell: ps ax | grep -v "grep" | grep "tower-manage run_socketio_service"
  register: ansible_tower_present
  failed_when: (ansible_tower_present.stderr != "")

- name: download ansible tower (if necessary)
  command: wget http://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-{{ tower_version }}.tar.gz
  when: (ansible_tower_present.stdout == '')

- name: extract ansible tower
  command: tar -xvf ansible-tower-setup-{{ tower_version }}.tar.gz
  when: (ansible_tower_present.stdout == '')

- name: configure ansible tower
  shell: >
    cd ansible-tower-setup-{{ tower_version }};
    sed -i "s/admin_password=''/admin_password='admin'/g" inventory;
    sed -i "s/redis_password=''/redis_password='admin'/g" inventory;
    sed -i "s/pg_password=''/pg_password='awx'/g" inventory
  when: (ansible_tower_present.stdout == '' and "{{ tower_version }}" == "3.0.0")

- name: create config option file (if necessary)
  template: src=config_options.yml.j2 dest=/home/vagrant/ansible-tower-setup-{{ tower_version }}/tower_setup_conf.yml owner=vagrant group=vagrant 

- name: run configure ansible tower script (if necessary)
  shell: >
    cd ansible-tower-setup-{{ tower_version }};
    ./configure -o config_options.yml
  when: ("{{ tower_version }}" == "2.4.5")

- name: set up ansible tower
  shell: >
    cd ansible-tower-setup-{{ tower_version }};
    ./setup.sh
  when: (ansible_tower_present.stdout == '')

- name: generate ssh key
  user: name=root generate_ssh_key=yes

- name: install ansible tower cli
  command: pip install ansible-tower-cli

- name: set ansible tower cli config
  shell: >
    tower-cli config host localhost;
    tower-cli config username admin;
    tower-cli config password admin;
    tower-cli config verify_ssl false
